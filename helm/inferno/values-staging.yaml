# Staging Environment Values
# Override values for staging deployment

namespace: inferno-staging
environment: staging
instanceName: inferno-staging

image:
  tag: "0.8.0"
  pullPolicy: IfNotPresent

# Two replicas for staging (HA testing)
replicaCount: 2

# Resource limits for staging
resources:
  limits:
    cpu: 1500m
    memory: 3Gi
  requests:
    cpu: 500m
    memory: 1Gi

# Autoscaling with modest limits for staging
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  metrics:
    cpu:
      enabled: true
      utilization: 70
    memory:
      enabled: true
      utilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 50
          periodSeconds: 30
        - type: Pods
          value: 1
          periodSeconds: 30

# Staging logging (info level)
configMap:
  INFERNO_LOG_LEVEL: "info"
  INFERNO_LOG_FORMAT: "json"
  INFERNO_ENV: "staging"
  # API Configuration
  INFERNO_BIND_ADDRESS: "0.0.0.0"
  INFERNO_BIND_PORT: "8000"
  INFERNO_WORKER_THREADS: "4"
  INFERNO_REQUEST_TIMEOUT: "300"
  # Model Configuration
  INFERNO_MAX_MODEL_SIZE_GB: "50"
  INFERNO_CONTEXT_SIZE: "2048"
  INFERNO_BATCH_SIZE: "32"
  INFERNO_GPU_ENABLED: "true"
  # Queue Configuration
  INFERNO_QUEUE_MAX_PENDING: "1000"
  INFERNO_QUEUE_MODERATE_THRESHOLD: "70"
  INFERNO_QUEUE_CRITICAL_THRESHOLD: "90"
  INFERNO_MAX_WORKERS: "8"
  INFERNO_QUEUE_CHECKPOINT_INTERVAL: "30"
  # Cache Configuration
  INFERNO_CACHE_STRATEGY: "hybrid"
  INFERNO_CACHE_SIZE_MB: "500"
  INFERNO_CACHE_TTL: "3600"
  INFERNO_CACHE_COMPRESSION_ENABLED: "true"
  # Streaming Configuration
  INFERNO_TOKEN_BATCH_SIZE: "3"
  INFERNO_TOKEN_BATCH_MAX_WAIT_MS: "50"
  INFERNO_KEEPALIVE_INTERVAL: "30"
  # Profiling enabled for staging
  INFERNO_PROFILING_ENABLED: "true"
  INFERNO_PROFILING_MAX_PROFILES: "500"
  INFERNO_INFERENCE_TIMEOUT: "300"
  INFERNO_TOKEN_TIMEOUT: "30"
  # Metrics enabled for staging
  INFERNO_METRICS_ENABLED: "true"
  INFERNO_METRICS_PORT: "9090"

# Moderate storage for staging
persistence:
  enabled: true
  storageClass: standard
  models:
    size: 200Gi
  cache:
    size: 100Gi
  queue:
    size: 10Gi

# Pod Disruption Budget enabled for staging
podDisruptionBudget:
  enabled: true
  minAvailable: 1

# Health checks for staging
healthChecks:
  startup:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 2
    timeoutSeconds: 3
    failureThreshold: 15
  readiness:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  liveness:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3

# NetworkPolicy enabled for staging
networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 8000
        - protocol: TCP
          port: 9090

# Service configuration for staging
service:
  internal:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  external:
    enabled: true
    type: NodePort
    port: 8000
    targetPort: 8000
    name: inferno-staging-external

# Monitoring enabled for staging
monitoring:
  prometheus:
    enabled: true
    port: 9090
    scrapeInterval: 30s
  serviceMonitor:
    enabled: false
