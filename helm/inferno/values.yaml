# Inferno Helm Chart - Default Values
# Override with environment-specific values files (values-dev.yaml, values-prod.yaml, etc.)

# ============================================================================
# GLOBAL SETTINGS
# ============================================================================

# Namespace for deployment
namespace: default

# Environment: development, staging, production
environment: development

# Instance name for pod identification
instanceName: inferno

# ============================================================================
# IMAGE CONFIGURATION
# ============================================================================

image:
  repository: inferno
  tag: "0.8.0"
  pullPolicy: IfNotPresent

# Image pull secrets (for private registries)
imagePullSecrets: []

# ============================================================================
# DEPLOYMENT CONFIGURATION
# ============================================================================

# Number of replicas (overridden by HPA if enabled)
replicaCount: 3

# Deployment strategy
strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 1
    maxUnavailable: 0

# Pod annotations
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "9090"
  prometheus.io/path: "/metrics"

# Security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1000
  fsGroup: 1000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

# ============================================================================
# SERVICE CONFIGURATION
# ============================================================================

service:
  # Internal service
  internal:
    type: ClusterIP
    port: 8000
    targetPort: 8000
    name: inferno
    annotations: {}

  # External service
  external:
    enabled: true
    type: LoadBalancer  # Change to NodePort if no cloud LB
    port: 80
    targetPort: 8000
    name: inferno-external
    annotations: {}
    externalIPs: []

# ============================================================================
# RESOURCE LIMITS & REQUESTS
# ============================================================================

resources:
  limits:
    cpu: 2000m
    memory: 4Gi
  requests:
    cpu: 1000m
    memory: 2Gi

# ============================================================================
# AUTOSCALING
# ============================================================================

autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 10
  
  # Metrics for scaling
  metrics:
    cpu:
      enabled: true
      utilization: 70
    memory:
      enabled: true
      utilization: 80

  # Scale behavior
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Percent
          value: 50
          periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
        - type: Percent
          value: 50
          periodSeconds: 30
        - type: Pods
          value: 2
          periodSeconds: 30

# Vertical Pod Autoscaler (optional)
vpa:
  enabled: false
  updateMode: "Off"  # Change to "Auto" for automatic updates

# ============================================================================
# PERSISTENT STORAGE
# ============================================================================

persistence:
  enabled: true
  storageClass: standard
  
  # Models volume
  models:
    size: 100Gi
    path: /home/inferno/.inferno/models
  
  # Cache volume
  cache:
    size: 50Gi
    path: /home/inferno/.inferno/cache
  
  # Queue volume
  queue:
    size: 10Gi
    path: /home/inferno/.inferno/queue

# ============================================================================
# ENVIRONMENT VARIABLES (from ConfigMap & Secrets)
# ============================================================================

configMap:
  # Logging
  INFERNO_LOG_LEVEL: "info"
  INFERNO_LOG_FORMAT: "json"
  
  # API Configuration
  INFERNO_BIND_ADDRESS: "0.0.0.0"
  INFERNO_BIND_PORT: "8000"
  INFERNO_WORKER_THREADS: "4"
  INFERNO_REQUEST_TIMEOUT: "300"
  
  # Model Configuration
  INFERNO_MAX_MODEL_SIZE_GB: "50"
  INFERNO_CONTEXT_SIZE: "2048"
  INFERNO_BATCH_SIZE: "32"
  INFERNO_GPU_ENABLED: "true"
  
  # Queue Configuration
  INFERNO_QUEUE_MAX_PENDING: "1000"
  INFERNO_QUEUE_MODERATE_THRESHOLD: "70"
  INFERNO_QUEUE_CRITICAL_THRESHOLD: "90"
  INFERNO_MAX_WORKERS: "8"
  INFERNO_QUEUE_CHECKPOINT_INTERVAL: "30"
  
  # Profiling Configuration
  INFERNO_PROFILING_ENABLED: "true"
  INFERNO_PROFILING_MAX_PROFILES: "1000"
  INFERNO_INFERENCE_TIMEOUT: "300"
  INFERNO_TOKEN_TIMEOUT: "30"
  
  # Cache Configuration
  INFERNO_CACHE_STRATEGY: "hybrid"
  INFERNO_CACHE_SIZE_MB: "500"
  INFERNO_CACHE_TTL: "3600"
  INFERNO_CACHE_COMPRESSION_ENABLED: "true"
  
  # Streaming Configuration
  INFERNO_TOKEN_BATCH_SIZE: "3"
  INFERNO_TOKEN_BATCH_MAX_WAIT_MS: "50"
  INFERNO_KEEPALIVE_INTERVAL: "30"
  INFERNO_COMPRESSION_FORMAT: "auto"
  
  # Deployment Configuration
  INFERNO_ENV: "production"
  INFERNO_METRICS_ENABLED: "true"
  INFERNO_METRICS_PORT: "9090"

secrets:
  # Authentication (set via --set or -f values)
  INFERNO_AUTH_ENABLED: "false"
  INFERNO_AUTH_SECRET_KEY: ""
  
  # Optional: Sentry
  INFERNO_SENTRY_DSN: ""
  
  # Optional: OAuth2
  OAUTH2_CLIENT_ID: ""
  OAUTH2_CLIENT_SECRET: ""
  OAUTH2_PROVIDER_URL: ""

# ============================================================================
# HEALTH CHECKS
# ============================================================================

healthChecks:
  startup:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 2
    timeoutSeconds: 3
    failureThreshold: 15
    successThreshold: 1
  
  readiness:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  
  liveness:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 30
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1

# ============================================================================
# AFFINITY & TOPOLOGY
# ============================================================================

affinity:
  # Pod anti-affinity for distribution
  podAntiAffinity:
    preferred: true  # Set to false for strict anti-affinity
    topologyKey: kubernetes.io/hostname

# ============================================================================
# RBAC
# ============================================================================

rbac:
  create: true
  serviceAccountName: inferno

# ============================================================================
# NETWORK POLICY
# ============================================================================

networkPolicy:
  enabled: true
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
        - podSelector: {}
      ports:
        - protocol: TCP
          port: 8000
        - protocol: TCP
          port: 9090

# ============================================================================
# POD DISRUPTION BUDGET
# ============================================================================

podDisruptionBudget:
  enabled: true
  minAvailable: 2  # At least 2 pods must be available

# ============================================================================
# MONITORING & OBSERVABILITY
# ============================================================================

monitoring:
  prometheus:
    enabled: true
    port: 9090
    scrapeInterval: 30s

  # ServiceMonitor for Prometheus Operator (optional)
  serviceMonitor:
    enabled: false

  # PrometheusRule for alerts (optional, requires Prometheus Operator)
  prometheusRule:
    enabled: false

# ============================================================================
# INGRESS
# ============================================================================

ingress:
  enabled: false
  className: nginx
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
    - host: inferno.example.com
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: inferno-tls
      hosts:
        - inferno.example.com

# ============================================================================
# NODE SELECTION
# ============================================================================

nodeSelector: {}

tolerations: []

# ============================================================================
# TERMINATION
# ============================================================================

terminationGracePeriodSeconds: 30

# ============================================================================
# INIT CONTAINERS (optional)
# ============================================================================

initContainers: []

# ============================================================================
# HOOKS
# ============================================================================

hooks:
  preInstall: []
  postInstall: []
  preUpgrade: []
  postUpgrade: []
